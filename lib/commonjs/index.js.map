{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeSvg","_shape","_svg","_array","_math","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","AnimatedPath","Animated","createAnimatedComponent","Path","DonutChart","data","containerWidth","containerHeight","radius","startAngle","endAngle","strokeWidth","type","animationType","unit","typeLabel","labelWrapperStyle","labelValueStyle","labelTitleStyle","containerStyle","styleName","styleValue","icon","donutItemListeners","viewBox","ViewBox","width","height","squareInCircle","Square","diameter","animateOpacity","useRef","Value","current","animateContainerOpacity","animatedStrokeWidths","map","pathRefs","animatedPaths","displayValue","setDisplayValue","useState","rotationPaths","setRotationPath","defaultInterpolateConfig","inputRange","outputRange","sumOfDonutItemValue","useMemo","d","value","reduce","total","prev","donutItemValueToPercentage","rotationRange","forEach","_","idx","fromValues","sum","slice","toValues","push","LinearInterpolation","from","to","useEffect","setValue","slideAnimation","fadeAnimation","animations","ani","timing","toValue","duration","easing","Easing","bezier","useNativeDriver","parallel","start","element","addListener","animatedValue","startValue","removeAllListeners","_donutItemListeners$i","_donutItemListeners$i2","angle","arcParams","coordX","getCenterCoord","x","coordY","y","drawPath","Arc","getDrawPath","setNativeProps","onUpdateDisplayValue","index","onPressIn","onPressOut","_getContainerStyle","styles","defaultContainer","_getLabelValueStyle","color","defaultLabelValue","_getLabelTitleStyle","defaultLabelTitle","_getLabelWrapperStyle","defaultLabelWrapper","defaultLabelSemiCircular","getCorner","opacity","_getLabelWrapperIconStyle","defaultLabelIcon","Platform","OS","borderRadius","backgroundColor","createElement","Fragment","View","style","Svg","key","ref","el","onPress","strokeLinecap","fill","stroke","SvgXml","xml","Text","name","exports","StyleSheet","create","display","justifyContent","alignItems","position","paddingTop","Dimensions","fontSize","fontWeight"],"sources":["index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useMemo, useState, Fragment } from \"react\";\nimport {\n  StyleProp,\n  Text,\n  View,\n  ViewStyle,\n  Animated,\n  StyleSheet,\n  TextStyle,\n  Easing,\n  Dimensions,\n  Platform,\n} from \"react-native\";\n\nimport { Svg, Path, SvgXml } from \"react-native-svg\";\nimport { Square } from \"./packages/shape\";\nimport { Arc, ArcParams, ViewBox } from \"./packages/svg\";\nimport { sum } from \"./packages/array\";\nimport { LinearInterpolation } from \"./packages/math\";\n\nexport type DonutItem = {\n  name: string;\n  value: number;\n  color: string;\n};\n\nexport type DonutAnimationType = \"fade\" | \"slide\";\n\nexport type DonutAnimationTypeLabel = 'circular' | 'semi-circular';\n\nexport type IDonutProps = {\n  data: DonutItem[];\n  containerWidth: number;\n  containerHeight: number;\n  radius: number;\n  startAngle?: number;\n  endAngle?: number;\n  strokeWidth?: number;\n  type?: \"butt\" | \"round\" | \"square\";\n  typeLabel?: any;\n  labelValueStyle?: StyleProp<TextStyle>;\n  labelTitleStyle?: StyleProp<TextStyle>;\n  labelWrapperStyle?: StyleProp<ViewStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  animationType?: DonutAnimationType;\n  unit?: string;\n  styleName?: TextStyle,\n  styleValue?: TextStyle\n  icon?: string\n};\n\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nexport const DonutChart = ({\n  data,\n  containerWidth,\n  containerHeight,\n  radius,\n  startAngle = -125,\n  endAngle = startAngle * -1,\n  strokeWidth = 10,\n  type = \"round\",\n  animationType = \"slide\",\n  unit,\n  typeLabel = \"circular\",\n  labelWrapperStyle,\n  labelValueStyle,\n  labelTitleStyle,\n  containerStyle,\n  styleName,\n  styleValue,\n  icon = ''\n}: IDonutProps) => {\n  let donutItemListeners: any = [];\n  const viewBox = new ViewBox({\n    width: containerWidth,\n    height: containerHeight,\n  });\n  const squareInCircle = new Square({ diameter: radius * 2 });\n\n  const animateOpacity = useRef(new Animated.Value(0)).current;\n  const animateContainerOpacity = useRef(new Animated.Value(0)).current;\n  const animatedStrokeWidths = useRef(\n    data.map(() => new Animated.Value(strokeWidth))\n  ).current;\n  const pathRefs = useRef<typeof AnimatedPath[]>([]);\n  const animatedPaths = useRef<Array<Animated.Value>>([]).current;\n\n  const [displayValue, setDisplayValue] = useState<DonutItem>(data[0]);\n\n  // TODO:\n  // remove WTF is this variable ?\n  const [rotationPaths, setRotationPath] = useState<\n    Array<{ from: number; to: number }>\n  >([]);\n\n  const defaultInterpolateConfig = (): {\n    inputRange: [number, number];\n    outputRange: [number, number];\n  } => ({ inputRange: [0, 100], outputRange: [startAngle, endAngle] });\n\n  const sumOfDonutItemValue = useMemo(\n    (): number =>\n      data\n        .map((d) => d.value)\n        .reduce((total: number, prev: number) => total + prev),\n    [data]\n  );\n\n  const donutItemValueToPercentage = useMemo(\n    () => data.map((d) => (d.value / sumOfDonutItemValue) * 100),\n    [sumOfDonutItemValue, data]\n  );\n\n  useMemo(() => {\n    const rotationRange: Array<{ from: number; to: number }> = [];\n\n    data.forEach((_, idx) => {\n      const fromValues = sum(donutItemValueToPercentage.slice(0, idx));\n      const toValues = sum(donutItemValueToPercentage.slice(0, idx + 1));\n\n      animatedPaths.push(\n        new Animated.Value(\n          LinearInterpolation({\n            value: fromValues,\n            ...defaultInterpolateConfig(),\n          })\n        )\n      );\n\n      rotationRange[idx] = {\n        from: LinearInterpolation({\n          value: fromValues,\n          ...defaultInterpolateConfig(),\n        }),\n        to: LinearInterpolation({\n          value: toValues,\n          ...defaultInterpolateConfig(),\n        }),\n      };\n    });\n\n    setRotationPath(rotationRange);\n  }, [data]);\n\n  useEffect(() => {\n    switch (animationType) {\n      case \"slide\":\n        animateContainerOpacity.setValue(1);\n        slideAnimation();\n        break;\n\n      default:\n        fadeAnimation();\n        break;\n    }\n  }, []);\n\n  const slideAnimation = () => {\n    const animations: Animated.CompositeAnimation[] = data.map((_, i) => {\n      const ani = Animated.timing(animatedPaths[i], {\n        toValue: rotationPaths[i].to,\n        duration: 3000,\n        easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n        useNativeDriver: true,\n      });\n\n      return ani;\n    });\n    Animated.parallel(animations).start();\n  };\n\n  const fadeAnimation = () => {\n    Animated.timing(animateContainerOpacity, {\n      toValue: 1,\n      duration: 5000,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  useEffect(() => {\n    data.forEach((_, i) => {\n      const element = pathRefs.current[i];\n      donutItemListeners[i] = addListener({\n        element,\n        animatedValue: animatedPaths[i],\n        startValue: rotationPaths[i].from,\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (animationType === \"slide\") {\n        data.forEach((_, i) => {\n          if (\n            donutItemListeners?.[i] &&\n            donutItemListeners?.[i].removeAllListeners\n          ) {\n            donutItemListeners?.[i].removeAllListeners?.();\n          }\n        });\n      }\n    };\n  }, []);\n\n  const addListener = ({\n    element,\n    animatedValue,\n    startValue,\n  }: {\n    element: any;\n    animatedValue: Animated.Value;\n    startValue: number;\n  }) => {\n    animatedValue.addListener((angle) => {\n      const arcParams: ArcParams = {\n        coordX: viewBox.getCenterCoord().x,\n        coordY: viewBox.getCenterCoord().y,\n        radius: radius,\n        startAngle: startValue,\n        endAngle: angle.value,\n      };\n      const drawPath = new Arc(arcParams).getDrawPath();\n\n      if (element) {\n        element.setNativeProps({ d: drawPath });\n      }\n    });\n  };\n\n  useEffect(() => {\n    animateOpacity.setValue(0);\n    Animated.timing(animateOpacity, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n      useNativeDriver: true,\n    }).start();\n  }, []);\n\n  const onUpdateDisplayValue = (value: DonutItem, index: number) => {\n    setDisplayValue(value);\n    animateOpacity.setValue(0);\n\n    Animated.parallel([\n      Animated.timing(animateOpacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  const onPressIn = (value: DonutItem, index: number) => {\n    Animated.timing(animatedStrokeWidths[index], {\n      toValue: strokeWidth + 2,\n      duration: 500,\n      useNativeDriver: true,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n    }).start();\n  };\n\n  const onPressOut = (index: number) => {\n    Animated.timing(animatedStrokeWidths[index], {\n      toValue: strokeWidth,\n      duration: 500,\n      useNativeDriver: true,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n    }).start();\n  };\n\n  const _getContainerStyle = (): StyleProp<ViewStyle> => [\n    styles.defaultContainer,\n    containerStyle,\n    { width: containerWidth, height: containerHeight },\n  ];\n\n  const _getLabelValueStyle = (color: string): StyleProp<TextStyle> => [\n    styles.defaultLabelValue,\n    { color },\n    labelValueStyle,\n  ];\n\n  const _getLabelTitleStyle = (color: string): StyleProp<TextStyle> => [\n    styles.defaultLabelTitle,\n    { color },\n    labelTitleStyle,\n  ];\n\n  const _getLabelWrapperStyle = (): Animated.WithAnimatedArray<any> => [\n    typeLabel === 'circular' ? styles.defaultLabelWrapper : styles.defaultLabelSemiCircular , \n    {\n      width: squareInCircle.getCorner() - strokeWidth,\n      height: squareInCircle.getCorner() - strokeWidth,\n      opacity: animateOpacity,\n    },\n    labelWrapperStyle,\n  ];\n\n  const _getLabelWrapperIconStyle = (): Animated.WithAnimatedArray<any> => [\n styles.defaultLabelIcon , \n    {\n      width:  radius * (Platform.OS ==='android' ? 1.5 : 1.55),\n      height: radius * (Platform.OS ==='android' ? 1.5 : 1.55),\n      borderRadius: 120,\n      backgroundColor: '#F4F8FC',\n      opacity: animateOpacity,\n    },\n    labelWrapperStyle,\n  ];\n\n  return (\n    <Fragment>\n      <View style={_getContainerStyle()}>\n        <Svg width={viewBox.width} height={viewBox.height}>\n          {rotationPaths.map((d, i) => {\n            const arcParams: ArcParams = {\n              coordX: viewBox.getCenterCoord().x,\n              coordY: viewBox.getCenterCoord().y,\n              radius: radius,\n              startAngle: d.from,\n              endAngle: d.to,\n            };\n            const drawPath = new Arc(arcParams).getDrawPath();\n\n            return (\n              <AnimatedPath\n                key={`item-${i}`}\n                ref={(el: any) => (pathRefs.current[i] = el)}\n                onPress={() => onUpdateDisplayValue(data[i], i)}\n                onPressIn={() => onPressIn(data[i], i)}\n                onPressOut={() => onPressOut(i)}\n                strokeLinecap={type}\n                d={drawPath}\n                opacity={animateContainerOpacity}\n                fill=\"none\"\n                stroke={data[i].color}\n                strokeWidth={animatedStrokeWidths[i]}\n              />\n            );\n          })}\n        </Svg>\n        {\n          icon !== '' ? \n          <Animated.View style={_getLabelWrapperIconStyle()}>\n          <SvgXml xml={icon} />\n          </Animated.View>\n          :\n        <Animated.View style={_getLabelWrapperStyle()}>\n          <Text style={[_getLabelTitleStyle(displayValue?.color), {...styleName}]}>\n            {displayValue?.name}\n          </Text>\n          <Text style={[_getLabelValueStyle(displayValue?.color), {...styleValue}]}>\n            {displayValue?.value} {unit}\n          </Text>\n        </Animated.View>\n        }\n      </View>\n    </Fragment>\n  );\n};\nconst styles = StyleSheet.create({\n  defaultContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  defaultLabelWrapper: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  defaultLabelSemiCircular: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: 'flex-start',\n    paddingTop: Dimensions.get('window').width * 0.06\n  },\n\n  defaultLabelIcon: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n  },\n\n  defaultLabelValue: {\n    fontSize: 32,\n    fontWeight: \"bold\",\n  },\n\n  defaultLabelTitle: {\n    fontSize: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]}