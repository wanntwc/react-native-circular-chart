{"version":3,"names":["_math","require","_Coordinate","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","PolarCoordinate","Coordinate","constructor","coordX","coordY","radius","angle","startAngle","angleInRadians","Degree","toRadian","x","Math","cos","y","sin","exports"],"sources":["PolarCoordinate.tsx"],"sourcesContent":["import { Degree } from \"../math\";\nimport { CartesianCoordinate } from \"./CartesianCoordinate\";\nimport { Coordinate } from \"./Coordinate\";\n\n// https://www.mathsisfun.com/polar-cartesian-coordinates.html\nexport class PolarCoordinate extends Coordinate {\n  coordX: number = 0;\n  coordY: number = 0;\n  radius: number = 0;\n  angle: number = 0;\n\n  constructor({\n    coordX,\n    coordY,\n    radius,\n    angle,\n  }: {\n    coordX: number;\n    coordY: number;\n    radius: number;\n    angle: number;\n  }) {\n    super();\n    this.coordX = coordX;\n    this.coordY = coordY;\n    this.angle = angle;\n    this.radius = radius;\n  }\n\n  toCartesian = (): CartesianCoordinate => {\n    const startAngle = this.angle - 90\n    const angleInRadians = new Degree(startAngle).toRadian();\n\n    return {\n      x: this.coordX + this.radius * Math.cos(angleInRadians),\n      y: this.coordY + this.radius * Math.sin(angleInRadians),\n    };\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AAA0C,SAAAE,gBAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAE,cAAA,CAAAF,CAAA,MAAAD,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAL,CAAA,EAAAC,CAAA,IAAAK,KAAA,EAAAJ,CAAA,EAAAK,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAT,CAAA,CAAAC,CAAA,IAAAC,CAAA,EAAAF,CAAA;AAAA,SAAAG,eAAAD,CAAA,QAAAQ,CAAA,GAAAC,YAAA,CAAAT,CAAA,uCAAAQ,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAC,aAAAT,CAAA,EAAAD,CAAA,2BAAAC,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAF,CAAA,GAAAE,CAAA,CAAAU,MAAA,CAAAC,WAAA,kBAAAb,CAAA,QAAAU,CAAA,GAAAV,CAAA,CAAAc,IAAA,CAAAZ,CAAA,EAAAD,CAAA,uCAAAS,CAAA,SAAAA,CAAA,YAAAK,SAAA,yEAAAd,CAAA,GAAAe,MAAA,GAAAC,MAAA,EAAAf,CAAA;AAE1C;AACO,MAAMgB,eAAe,SAASC,sBAAU,CAAC;EAM9CC,WAAWA,CAAC;IACVC,MAAM;IACNC,MAAM;IACNC,MAAM;IACNC;EAMF,CAAC,EAAE;IACD,KAAK,CAAC,CAAC;IAACzB,eAAA,iBAhBO,CAAC;IAAAA,eAAA,iBACD,CAAC;IAAAA,eAAA,iBACD,CAAC;IAAAA,eAAA,gBACF,CAAC;IAAAA,eAAA,sBAoBH,MAA2B;MACvC,MAAM0B,UAAU,GAAG,IAAI,CAACD,KAAK,GAAG,EAAE;MAClC,MAAME,cAAc,GAAG,IAAIC,YAAM,CAACF,UAAU,CAAC,CAACG,QAAQ,CAAC,CAAC;MAExD,OAAO;QACLC,CAAC,EAAE,IAAI,CAACR,MAAM,GAAG,IAAI,CAACE,MAAM,GAAGO,IAAI,CAACC,GAAG,CAACL,cAAc,CAAC;QACvDM,CAAC,EAAE,IAAI,CAACV,MAAM,GAAG,IAAI,CAACC,MAAM,GAAGO,IAAI,CAACG,GAAG,CAACP,cAAc;MACxD,CAAC;IACH,CAAC;IAdC,IAAI,CAACL,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,MAAM,GAAGA,MAAM;EACtB;AAWF;AAACW,OAAA,CAAAhB,eAAA,GAAAA,eAAA","ignoreList":[]}