{"version":3,"names":["React","useEffect","useRef","useMemo","useState","Fragment","Text","View","Animated","StyleSheet","Easing","Dimensions","Platform","Svg","Path","SvgXml","Square","Arc","ViewBox","sum","LinearInterpolation","AnimatedPath","createAnimatedComponent","DonutChart","data","containerWidth","containerHeight","radius","startAngle","endAngle","strokeWidth","type","animationType","unit","typeLabel","labelWrapperStyle","labelValueStyle","labelTitleStyle","containerStyle","styleName","styleValue","icon","donutItemListeners","viewBox","width","height","squareInCircle","diameter","animateOpacity","Value","current","animateContainerOpacity","animatedStrokeWidths","map","pathRefs","animatedPaths","displayValue","setDisplayValue","rotationPaths","setRotationPath","defaultInterpolateConfig","inputRange","outputRange","sumOfDonutItemValue","d","value","reduce","total","prev","donutItemValueToPercentage","rotationRange","forEach","_","idx","fromValues","slice","toValues","push","from","to","setValue","slideAnimation","fadeAnimation","animations","i","ani","timing","toValue","duration","easing","bezier","useNativeDriver","parallel","start","element","addListener","animatedValue","startValue","removeAllListeners","_donutItemListeners$i","_donutItemListeners$i2","call","angle","arcParams","coordX","getCenterCoord","x","coordY","y","drawPath","getDrawPath","setNativeProps","onUpdateDisplayValue","index","onPressIn","onPressOut","_getContainerStyle","styles","defaultContainer","_getLabelValueStyle","color","defaultLabelValue","_getLabelTitleStyle","defaultLabelTitle","_getLabelWrapperStyle","defaultLabelWrapper","defaultLabelSemiCircular","getCorner","opacity","_getLabelWrapperIconStyle","defaultLabelIcon","OS","borderRadius","backgroundColor","createElement","style","key","ref","el","onPress","strokeLinecap","fill","stroke","xml","name","create","display","justifyContent","alignItems","position","paddingTop","get","fontSize","fontWeight"],"sources":["index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useMemo, useState, Fragment } from \"react\";\nimport {\n  StyleProp,\n  Text,\n  View,\n  ViewStyle,\n  Animated,\n  StyleSheet,\n  TextStyle,\n  Easing,\n  Dimensions,\n  Platform,\n} from \"react-native\";\n\nimport { Svg, Path, SvgXml } from \"react-native-svg\";\nimport { Square } from \"./packages/shape\";\nimport { Arc, ArcParams, ViewBox } from \"./packages/svg\";\nimport { sum } from \"./packages/array\";\nimport { LinearInterpolation } from \"./packages/math\";\n\nexport type DonutItem = {\n  name: string;\n  value: number;\n  color: string;\n};\n\nexport type DonutAnimationType = \"fade\" | \"slide\";\n\nexport type DonutAnimationTypeLabel = 'circular' | 'semi-circular';\n\nexport type IDonutProps = {\n  data: DonutItem[];\n  containerWidth: number;\n  containerHeight: number;\n  radius: number;\n  startAngle?: number;\n  endAngle?: number;\n  strokeWidth?: number;\n  type?: \"butt\" | \"round\" | \"square\";\n  typeLabel?: any;\n  labelValueStyle?: StyleProp<TextStyle>;\n  labelTitleStyle?: StyleProp<TextStyle>;\n  labelWrapperStyle?: StyleProp<ViewStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  animationType?: DonutAnimationType;\n  unit?: string;\n  styleName?: TextStyle,\n  styleValue?: TextStyle\n  icon?: string\n};\n\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nexport const DonutChart = ({\n  data,\n  containerWidth,\n  containerHeight,\n  radius,\n  startAngle = -125,\n  endAngle = startAngle * -1,\n  strokeWidth = 10,\n  type = \"round\",\n  animationType = \"slide\",\n  unit,\n  typeLabel = \"circular\",\n  labelWrapperStyle,\n  labelValueStyle,\n  labelTitleStyle,\n  containerStyle,\n  styleName,\n  styleValue,\n  icon = ''\n}: IDonutProps) => {\n  let donutItemListeners: any = [];\n  const viewBox = new ViewBox({\n    width: containerWidth,\n    height: containerHeight,\n  });\n  const squareInCircle = new Square({ diameter: radius * 2 });\n\n  const animateOpacity = useRef(new Animated.Value(0)).current;\n  const animateContainerOpacity = useRef(new Animated.Value(0)).current;\n  const animatedStrokeWidths = useRef(\n    data.map(() => new Animated.Value(strokeWidth))\n  ).current;\n  const pathRefs = useRef<typeof AnimatedPath[]>([]);\n  const animatedPaths = useRef<Array<Animated.Value>>([]).current;\n\n  const [displayValue, setDisplayValue] = useState<DonutItem>(data[0]);\n\n  // TODO:\n  // remove WTF is this variable ?\n  const [rotationPaths, setRotationPath] = useState<\n    Array<{ from: number; to: number }>\n  >([]);\n\n  const defaultInterpolateConfig = (): {\n    inputRange: [number, number];\n    outputRange: [number, number];\n  } => ({ inputRange: [0, 100], outputRange: [startAngle, endAngle] });\n\n  const sumOfDonutItemValue = useMemo(\n    (): number =>\n      data\n        .map((d) => d.value)\n        .reduce((total: number, prev: number) => total + prev),\n    [data]\n  );\n\n  const donutItemValueToPercentage = useMemo(\n    () => data.map((d) => (d.value / sumOfDonutItemValue) * 100),\n    [sumOfDonutItemValue, data]\n  );\n\n  useMemo(() => {\n    const rotationRange: Array<{ from: number; to: number }> = [];\n\n    data.forEach((_, idx) => {\n      const fromValues = sum(donutItemValueToPercentage.slice(0, idx));\n      const toValues = sum(donutItemValueToPercentage.slice(0, idx + 1));\n\n      animatedPaths.push(\n        new Animated.Value(\n          LinearInterpolation({\n            value: fromValues,\n            ...defaultInterpolateConfig(),\n          })\n        )\n      );\n\n      rotationRange[idx] = {\n        from: LinearInterpolation({\n          value: fromValues,\n          ...defaultInterpolateConfig(),\n        }),\n        to: LinearInterpolation({\n          value: toValues,\n          ...defaultInterpolateConfig(),\n        }),\n      };\n    });\n\n    setRotationPath(rotationRange);\n  }, [data]);\n\n  useEffect(() => {\n    switch (animationType) {\n      case \"slide\":\n        animateContainerOpacity.setValue(1);\n        slideAnimation();\n        break;\n\n      default:\n        fadeAnimation();\n        break;\n    }\n  }, []);\n\n  const slideAnimation = () => {\n    const animations: Animated.CompositeAnimation[] = data.map((_, i) => {\n      const ani = Animated.timing(animatedPaths[i], {\n        toValue: rotationPaths[i].to,\n        duration: 3000,\n        easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n        useNativeDriver: true,\n      });\n\n      return ani;\n    });\n    Animated.parallel(animations).start();\n  };\n\n  const fadeAnimation = () => {\n    Animated.timing(animateContainerOpacity, {\n      toValue: 1,\n      duration: 5000,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  useEffect(() => {\n    data.forEach((_, i) => {\n      const element = pathRefs.current[i];\n      donutItemListeners[i] = addListener({\n        element,\n        animatedValue: animatedPaths[i],\n        startValue: rotationPaths[i].from,\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (animationType === \"slide\") {\n        data.forEach((_, i) => {\n          if (\n            donutItemListeners?.[i] &&\n            donutItemListeners?.[i].removeAllListeners\n          ) {\n            donutItemListeners?.[i].removeAllListeners?.();\n          }\n        });\n      }\n    };\n  }, []);\n\n  const addListener = ({\n    element,\n    animatedValue,\n    startValue,\n  }: {\n    element: any;\n    animatedValue: Animated.Value;\n    startValue: number;\n  }) => {\n    animatedValue.addListener((angle) => {\n      const arcParams: ArcParams = {\n        coordX: viewBox.getCenterCoord().x,\n        coordY: viewBox.getCenterCoord().y,\n        radius: radius,\n        startAngle: startValue,\n        endAngle: angle.value,\n      };\n      const drawPath = new Arc(arcParams).getDrawPath();\n\n      if (element) {\n        element.setNativeProps({ d: drawPath });\n      }\n    });\n  };\n\n  useEffect(() => {\n    animateOpacity.setValue(0);\n    Animated.timing(animateOpacity, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n      useNativeDriver: true,\n    }).start();\n  }, []);\n\n  const onUpdateDisplayValue = (value: DonutItem, index: number) => {\n    setDisplayValue(value);\n    animateOpacity.setValue(0);\n\n    Animated.parallel([\n      Animated.timing(animateOpacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  const onPressIn = (value: DonutItem, index: number) => {\n    Animated.timing(animatedStrokeWidths[index], {\n      toValue: strokeWidth + 2,\n      duration: 500,\n      useNativeDriver: true,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n    }).start();\n  };\n\n  const onPressOut = (index: number) => {\n    Animated.timing(animatedStrokeWidths[index], {\n      toValue: strokeWidth,\n      duration: 500,\n      useNativeDriver: true,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n    }).start();\n  };\n\n  const _getContainerStyle = (): StyleProp<ViewStyle> => [\n    styles.defaultContainer,\n    containerStyle,\n    { width: containerWidth, height: containerHeight },\n  ];\n\n  const _getLabelValueStyle = (color: string): StyleProp<TextStyle> => [\n    styles.defaultLabelValue,\n    { color },\n    labelValueStyle,\n  ];\n\n  const _getLabelTitleStyle = (color: string): StyleProp<TextStyle> => [\n    styles.defaultLabelTitle,\n    { color },\n    labelTitleStyle,\n  ];\n\n  const _getLabelWrapperStyle = (): Animated.WithAnimatedArray<any> => [\n    typeLabel === 'circular' ? styles.defaultLabelWrapper : styles.defaultLabelSemiCircular , \n    {\n      width: squareInCircle.getCorner() - strokeWidth,\n      height: squareInCircle.getCorner() - strokeWidth,\n      opacity: animateOpacity,\n    },\n    labelWrapperStyle,\n  ];\n\n  const _getLabelWrapperIconStyle = (): Animated.WithAnimatedArray<any> => [\n styles.defaultLabelIcon , \n    {\n      width:  radius * (Platform.OS ==='android' ? 1.5 : 1.55),\n      height: radius * (Platform.OS ==='android' ? 1.5 : 1.55),\n      borderRadius: 120,\n      backgroundColor: '#F4F8FC',\n      opacity: animateOpacity,\n    },\n    labelWrapperStyle,\n  ];\n\n  return (\n    <Fragment>\n      <View style={_getContainerStyle()}>\n        <Svg width={viewBox.width} height={viewBox.height}>\n          {rotationPaths.map((d, i) => {\n            const arcParams: ArcParams = {\n              coordX: viewBox.getCenterCoord().x,\n              coordY: viewBox.getCenterCoord().y,\n              radius: radius,\n              startAngle: d.from,\n              endAngle: d.to,\n            };\n            const drawPath = new Arc(arcParams).getDrawPath();\n\n            return (\n              <AnimatedPath\n                key={`item-${i}`}\n                ref={(el: any) => (pathRefs.current[i] = el)}\n                onPress={() => onUpdateDisplayValue(data[i], i)}\n                onPressIn={() => onPressIn(data[i], i)}\n                onPressOut={() => onPressOut(i)}\n                strokeLinecap={type}\n                d={drawPath}\n                opacity={animateContainerOpacity}\n                fill=\"none\"\n                stroke={data[i].color}\n                strokeWidth={animatedStrokeWidths[i]}\n              />\n            );\n          })}\n        </Svg>\n        {\n          icon !== '' ? \n          <Animated.View style={_getLabelWrapperIconStyle()}>\n          <SvgXml xml={icon} />\n          </Animated.View>\n          :\n        <Animated.View style={_getLabelWrapperStyle()}>\n          <Text style={[_getLabelTitleStyle(displayValue?.color), {...styleName}]}>\n            {displayValue?.name}\n          </Text>\n          <Text style={[_getLabelValueStyle(displayValue?.color), {...styleValue}]}>\n            {displayValue?.value} {unit}\n          </Text>\n        </Animated.View>\n        }\n      </View>\n    </Fragment>\n  );\n};\nconst styles = StyleSheet.create({\n  defaultContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  defaultLabelWrapper: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  defaultLabelSemiCircular: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: 'flex-start',\n    paddingTop: Dimensions.get('window').width * 0.06\n  },\n\n  defaultLabelIcon: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n  },\n\n  defaultLabelValue: {\n    fontSize: 32,\n    fontWeight: \"bold\",\n  },\n\n  defaultLabelTitle: {\n    fontSize: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]}