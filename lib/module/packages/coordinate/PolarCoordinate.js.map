{"version":3,"names":["Degree","Coordinate","PolarCoordinate","constructor","coordX","coordY","radius","angle","_defineProperty","startAngle","angleInRadians","toRadian","x","Math","cos","y","sin"],"sources":["PolarCoordinate.tsx"],"sourcesContent":["import { Degree } from \"../math\";\nimport { CartesianCoordinate } from \"./CartesianCoordinate\";\nimport { Coordinate } from \"./Coordinate\";\n\n// https://www.mathsisfun.com/polar-cartesian-coordinates.html\nexport class PolarCoordinate extends Coordinate {\n  coordX: number = 0;\n  coordY: number = 0;\n  radius: number = 0;\n  angle: number = 0;\n\n  constructor({\n    coordX,\n    coordY,\n    radius,\n    angle,\n  }: {\n    coordX: number;\n    coordY: number;\n    radius: number;\n    angle: number;\n  }) {\n    super();\n    this.coordX = coordX;\n    this.coordY = coordY;\n    this.angle = angle;\n    this.radius = radius;\n  }\n\n  toCartesian = (): CartesianCoordinate => {\n    const startAngle = this.angle - 90\n    const angleInRadians = new Degree(startAngle).toRadian();\n\n    return {\n      x: this.coordX + this.radius * Math.cos(angleInRadians),\n      y: this.coordY + this.radius * Math.sin(angleInRadians),\n    };\n  };\n}\n"],"mappings":";;;AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,SAASC,UAAU,QAAQ,cAAc;;AAEzC;AACA,OAAO,MAAMC,eAAe,SAASD,UAAU,CAAC;EAM9CE,WAAWA,CAAC;IACVC,MAAM;IACNC,MAAM;IACNC,MAAM;IACNC;EAMF,CAAC,EAAE;IACD,KAAK,CAAC,CAAC;IAACC,eAAA,iBAhBO,CAAC;IAAAA,eAAA,iBACD,CAAC;IAAAA,eAAA,iBACD,CAAC;IAAAA,eAAA,gBACF,CAAC;IAAAA,eAAA,sBAoBH,MAA2B;MACvC,MAAMC,UAAU,GAAG,IAAI,CAACF,KAAK,GAAG,EAAE;MAClC,MAAMG,cAAc,GAAG,IAAIV,MAAM,CAACS,UAAU,CAAC,CAACE,QAAQ,CAAC,CAAC;MAExD,OAAO;QACLC,CAAC,EAAE,IAAI,CAACR,MAAM,GAAG,IAAI,CAACE,MAAM,GAAGO,IAAI,CAACC,GAAG,CAACJ,cAAc,CAAC;QACvDK,CAAC,EAAE,IAAI,CAACV,MAAM,GAAG,IAAI,CAACC,MAAM,GAAGO,IAAI,CAACG,GAAG,CAACN,cAAc;MACxD,CAAC;IACH,CAAC;IAdC,IAAI,CAACN,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,MAAM,GAAGA,MAAM;EACtB;AAWF","ignoreList":[]}