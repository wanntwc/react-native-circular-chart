{"version":3,"names":["React","Degree","describe","it","degree","radian","toRadian","expect","Number","toFixed","toBe","result","actualResult","Math","PI"],"sources":["Degree.test.js"],"sourcesContent":["import React from \"react\";\n// import { sum } from \"../../src/utils/Array\";\nimport { Degree } from \"./Degree\";\n\ndescribe(\"Converter From Degree To Radian\", (): void => {\n  it(\"90 deg == π/2 rad\", () => {\n    const degree = 90;\n    const radian = new Degree(degree).toRadian();\n\n    expect(Number(radian.toFixed(13))).toBe(1.5707963267949);\n  });\n\n  it(\"45 deg == π/4\", () => {\n    const degree = 45;\n    const radian = new Degree(degree).toRadian();\n\n    expect(Number(radian.toFixed(13))).toBe(0.7853981633974);\n  });\n\n  it(\"180 deg == π\", () => {\n    const degree = 180;\n    const radian = new Degree(degree).toRadian();\n\n    const result = Number(radian.toFixed(13));\n    const actualResult = Number(Math.PI.toFixed(13));\n\n    expect(result).toBe(actualResult);\n  });\n\n  it(\"270 deg == 3π/2\", () => {\n    const degree = 270;\n    const radian = new Degree(degree).toRadian();\n\n    const result = Number(radian.toFixed(13));\n    const actualResult = Number(((3 * Math.PI) / 2).toFixed(13));\n\n    expect(result).toBe(actualResult);\n  });\n\n  it(\"360 deg == 2π\", () => {\n    const degree = 360;\n    const radian = new Degree(degree).toRadian();\n\n    const result = Number(radian.toFixed(13));\n    const actualResult = Number((2 * Math.PI).toFixed(13));\n\n    expect(result).toBe(actualResult);\n  });\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,MAAM,QAAQ,UAAU;AAEjCC,QAAQ,CAAC,iCAAiC,EAAE,MAAY;EACtDC,EAAE,CAAC,mBAAmB,EAAE,MAAM;IAC5B,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACG,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC;IAE5CC,MAAM,CAACC,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;EAC1D,CAAC,CAAC;EAEFP,EAAE,CAAC,eAAe,EAAE,MAAM;IACxB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACG,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC;IAE5CC,MAAM,CAACC,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;EAC1D,CAAC,CAAC;EAEFP,EAAE,CAAC,cAAc,EAAE,MAAM;IACvB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACG,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC;IAE5C,MAAMK,MAAM,GAAGH,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMG,YAAY,GAAGJ,MAAM,CAACK,IAAI,CAACC,EAAE,CAACL,OAAO,CAAC,EAAE,CAAC,CAAC;IAEhDF,MAAM,CAACI,MAAM,CAAC,CAACD,IAAI,CAACE,YAAY,CAAC;EACnC,CAAC,CAAC;EAEFT,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1B,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACG,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC;IAE5C,MAAMK,MAAM,GAAGH,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMG,YAAY,GAAGJ,MAAM,CAAC,CAAE,CAAC,GAAGK,IAAI,CAACC,EAAE,GAAI,CAAC,EAAEL,OAAO,CAAC,EAAE,CAAC,CAAC;IAE5DF,MAAM,CAACI,MAAM,CAAC,CAACD,IAAI,CAACE,YAAY,CAAC;EACnC,CAAC,CAAC;EAEFT,EAAE,CAAC,eAAe,EAAE,MAAM;IACxB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACG,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC;IAE5C,MAAMK,MAAM,GAAGH,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMG,YAAY,GAAGJ,MAAM,CAAC,CAAC,CAAC,GAAGK,IAAI,CAACC,EAAE,EAAEL,OAAO,CAAC,EAAE,CAAC,CAAC;IAEtDF,MAAM,CAACI,MAAM,CAAC,CAACD,IAAI,CAACE,YAAY,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}