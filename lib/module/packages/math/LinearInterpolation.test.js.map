{"version":3,"names":["React","LinearInterpolation","describe","it","result","value","inputRange","outputRange","expectedResult","expect","toBe"],"sources":["LinearInterpolation.test.js"],"sourcesContent":["import React from \"react\";\nimport { LinearInterpolation } from \"./LinearInterpolation\";\n\ndescribe(\"LinearInterpolation: \", (): void => {\n  it(\"should equal 50, when value: 50, inputRange: [0, 100], outputRange: [0, 100]\", () => {\n    const result = LinearInterpolation({\n      value: 50,\n      inputRange: [0, 100],\n      outputRange: [0, 100],\n    });\n    const expectedResult = 50;\n\n    expect(result).toBe(expectedResult);\n  });\n\n  it(\"should equal 0, when value: 0, inputRange: [0, 100], outputRange: [0, 100]\", () => {\n    const result = LinearInterpolation({\n      value: 0,\n      inputRange: [0, 100],\n      outputRange: [0, 100],\n    });\n    const expectedResult = 0;\n\n    expect(result).toBe(expectedResult);\n  });\n\n  it(\"should equal 100, when value: 100, inputRange: [0, 100], outputRange: [0, 100]\", () => {\n    const result = LinearInterpolation({\n      value: 100,\n      inputRange: [0, 100],\n      outputRange: [0, 100],\n    });\n    const expectedResult = 100;\n\n    expect(result).toBe(expectedResult);\n  });\n\n  it(\"should equal 10, when value: 100, inputRange: [0, 100], outputRange: [0, 10]\", () => {\n    const result = LinearInterpolation({\n      value: 100,\n      inputRange: [0, 100],\n      outputRange: [0, 10],\n    });\n    const expectedResult = 10;\n\n    expect(result).toBe(expectedResult);\n  });\n\n  it(\"should equal 9, when value: 90, inputRange: [0, 100], outputRange: [0, 10]\", () => {\n    const result = LinearInterpolation({\n      value: 90,\n      inputRange: [0, 100],\n      outputRange: [0, 10],\n    });\n    const expectedResult = 9;\n\n    expect(result).toBe(expectedResult);\n  });\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3DC,QAAQ,CAAC,uBAAuB,EAAE,MAAY;EAC5CC,EAAE,CAAC,8EAA8E,EAAE,MAAM;IACvF,MAAMC,MAAM,GAAGH,mBAAmB,CAAC;MACjCI,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG;IACtB,CAAC,CAAC;IACF,MAAMC,cAAc,GAAG,EAAE;IAEzBC,MAAM,CAACL,MAAM,CAAC,CAACM,IAAI,CAACF,cAAc,CAAC;EACrC,CAAC,CAAC;EAEFL,EAAE,CAAC,4EAA4E,EAAE,MAAM;IACrF,MAAMC,MAAM,GAAGH,mBAAmB,CAAC;MACjCI,KAAK,EAAE,CAAC;MACRC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG;IACtB,CAAC,CAAC;IACF,MAAMC,cAAc,GAAG,CAAC;IAExBC,MAAM,CAACL,MAAM,CAAC,CAACM,IAAI,CAACF,cAAc,CAAC;EACrC,CAAC,CAAC;EAEFL,EAAE,CAAC,gFAAgF,EAAE,MAAM;IACzF,MAAMC,MAAM,GAAGH,mBAAmB,CAAC;MACjCI,KAAK,EAAE,GAAG;MACVC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG;IACtB,CAAC,CAAC;IACF,MAAMC,cAAc,GAAG,GAAG;IAE1BC,MAAM,CAACL,MAAM,CAAC,CAACM,IAAI,CAACF,cAAc,CAAC;EACrC,CAAC,CAAC;EAEFL,EAAE,CAAC,8EAA8E,EAAE,MAAM;IACvF,MAAMC,MAAM,GAAGH,mBAAmB,CAAC;MACjCI,KAAK,EAAE,GAAG;MACVC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE;IACrB,CAAC,CAAC;IACF,MAAMC,cAAc,GAAG,EAAE;IAEzBC,MAAM,CAACL,MAAM,CAAC,CAACM,IAAI,CAACF,cAAc,CAAC;EACrC,CAAC,CAAC;EAEFL,EAAE,CAAC,4EAA4E,EAAE,MAAM;IACrF,MAAMC,MAAM,GAAGH,mBAAmB,CAAC;MACjCI,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE;IACrB,CAAC,CAAC;IACF,MAAMC,cAAc,GAAG,CAAC;IAExBC,MAAM,CAACL,MAAM,CAAC,CAACM,IAAI,CAACF,cAAc,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}