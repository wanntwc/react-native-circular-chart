{"version":3,"names":["React","Radian","describe","it","radian","Math","PI","degree","toDegree","result","Number","toFixed","actualResult","expect","toBe"],"sources":["Radian.test.js"],"sourcesContent":["import React from \"react\";\n// import { sum } from \"../../src/utils/Array\";\nimport { Radian } from \"./Radian\";\n\ndescribe(\"Converter From Radian To Radian\", (): void => {\n  it(\"π/2 == 90 deg\", () => {\n    const radian = Math.PI / 2;\n    const degree = new Radian(radian).toDegree();\n\n    const result = Number(degree.toFixed(13));\n    const actualResult = 90;\n\n    expect(result).toBe(actualResult);\n  });\n\n  it(\"π/4 == 45 deg\", () => {\n    const radian = Math.PI / 4;\n    const degree = new Radian(radian).toDegree();\n\n    const result = Number(degree.toFixed(13));\n    const actualResult = 45;\n\n    expect(result).toBe(actualResult);\n  });\n\n  it(\"π == 180deg\", () => {\n    const radian = Math.PI;\n    const degree = new Radian(radian).toDegree();\n\n    const result = Number(degree.toFixed(13));\n    const actualResult = 180;\n\n    expect(result).toBe(actualResult);\n  });\n\n  it(\"3π/2 == 270 deg\", () => {\n    const radian = (3 * Math.PI) / 2;\n    const degree = new Radian(radian).toDegree();\n\n    const result = Number(degree.toFixed(13));\n    const actualResult = 270;\n\n    expect(result).toBe(actualResult);\n  });\n\n  it(\"2π == 360 deg\", () => {\n    const radian = 2 * Math.PI;\n    const degree = new Radian(radian).toDegree();\n\n    const result = Number(degree.toFixed(13));\n    const actualResult = 360;\n\n    expect(result).toBe(actualResult);\n  });\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,MAAM,QAAQ,UAAU;AAEjCC,QAAQ,CAAC,iCAAiC,EAAE,MAAY;EACtDC,EAAE,CAAC,eAAe,EAAE,MAAM;IACxB,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;IAC1B,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACG,MAAM,CAAC,CAACI,QAAQ,CAAC,CAAC;IAE5C,MAAMC,MAAM,GAAGC,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMC,YAAY,GAAG,EAAE;IAEvBC,MAAM,CAACJ,MAAM,CAAC,CAACK,IAAI,CAACF,YAAY,CAAC;EACnC,CAAC,CAAC;EAEFT,EAAE,CAAC,eAAe,EAAE,MAAM;IACxB,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;IAC1B,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACG,MAAM,CAAC,CAACI,QAAQ,CAAC,CAAC;IAE5C,MAAMC,MAAM,GAAGC,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMC,YAAY,GAAG,EAAE;IAEvBC,MAAM,CAACJ,MAAM,CAAC,CAACK,IAAI,CAACF,YAAY,CAAC;EACnC,CAAC,CAAC;EAEFT,EAAE,CAAC,aAAa,EAAE,MAAM;IACtB,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAE;IACtB,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACG,MAAM,CAAC,CAACI,QAAQ,CAAC,CAAC;IAE5C,MAAMC,MAAM,GAAGC,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMC,YAAY,GAAG,GAAG;IAExBC,MAAM,CAACJ,MAAM,CAAC,CAACK,IAAI,CAACF,YAAY,CAAC;EACnC,CAAC,CAAC;EAEFT,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1B,MAAMC,MAAM,GAAI,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAI,CAAC;IAChC,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACG,MAAM,CAAC,CAACI,QAAQ,CAAC,CAAC;IAE5C,MAAMC,MAAM,GAAGC,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMC,YAAY,GAAG,GAAG;IAExBC,MAAM,CAACJ,MAAM,CAAC,CAACK,IAAI,CAACF,YAAY,CAAC;EACnC,CAAC,CAAC;EAEFT,EAAE,CAAC,eAAe,EAAE,MAAM;IACxB,MAAMC,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE;IAC1B,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACG,MAAM,CAAC,CAACI,QAAQ,CAAC,CAAC;IAE5C,MAAMC,MAAM,GAAGC,MAAM,CAACH,MAAM,CAACI,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMC,YAAY,GAAG,GAAG;IAExBC,MAAM,CAACJ,MAAM,CAAC,CAACK,IAAI,CAACF,YAAY,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}